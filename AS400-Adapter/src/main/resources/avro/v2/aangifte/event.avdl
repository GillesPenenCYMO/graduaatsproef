@namespace("eu.cymo.jade.v2.events")
protocol Event {

	import idl "ids.avdl";

	// Structures
	record Tegenpartij {
		// naam van de tegenpartij
		string naam;
		// adres van de tegenpartij
		string? adres;
		Verzekekeringspartij? verzekeringspartij;
		Advocaat? advokaat;
	}
	record Verzekekeringspartij {
		string naam;
		string? adres;
	}
	record Advocaat {
		string naam;
		string? adres;
	}
	record MinnelijkeSchikking {
		string uitleg;
	}
	// welk soort voertuig was in het ongeval betrokken
	enum SoortVoertuig {
		Auto,
		Fiets,
		Moto,
		Andere
	}
	record VoertuigEigenaar {
		string naam;
		string? adres;
	}
	record Voertuig {
		SoortVoertuig soort;
		string? beschrijving;
		VoertuigEigenaar? eigenaar;
		string? Nummerplaat;
		Verzekekeringspartij? verzekeringVoertuig;
	}

	enum CodeAard{
		Arbeidsongeval,
		Arbeidsongeval_voorbehoud,
		Erkend_arbeidsongeval,
		Geweigerd_arbeidsongeval,
		Ongeval_gemeen_recht,
		Ongeval_gemeen_recht_zonder_terugvordering,
		Ongeval_prive_leven
	}

	enum CodeOngeval{
		Aangifte_is_verzonden,
		Potentieel_vorderingsdossier,
		Ongeval_zonder_derde,
		Vordering_verstuurd_naar_vzmy,
		CTX_gecreerd,
		onvolledige_aangifte,
		Sport_ongeval,
		Afgesloten_dossier,
		Geen_ongeval
	}

	enum TypeOngeval{
		Verkeersongeval_bestuurder,
		Verkeersongeval_zwakke_weggebruiker,
		Agressie,
		Ander_ongeval,
		Verkeersongeval_passagier,
		Nt_gedetailleerd_verkeersongeval,
		Ongeval_in_buitenland,
		Ongeval_met_buitenlandse_derde,
		Medische_fout,
		Terrorisme,
		Aangifte_ongeval_aanvaard,
		Aangifte_ongeval_onder_voorbehoud,
		AO_geweigerd,
		TWO_aanvaard,
		TWO_onder_voorbehoud,
		TWO_geweigerd,
		Einde_TWO,
		Consolidatie,
		Genezing_zonder_BWO,
		AO_prive_sector,
		AO_publieke_sector,
		AO_medische_hafltijdse,
		AO_onderweg_naar_of_van_het_werk
	}

	enum CodeOorsprong{
		Arbeidsongeschiktheid,
		papier712,
		FAT_Stroom,
		Tarificatie,
		Verzekering,
		Spontaan,
		Bijdragebon,
		Loket,
		Diverse,
		Carenet
	}

	record Klant {
		string voornaam;
		string naam;
		string INSZ;
		int externNr;
		@logicalType("timestamp-millis") long GeboorteDatum;
		string adres;
		string taal;
	}

	record GemaakteKost{
		@logicalType("timestamp-millis") long datum;
		string onmschrijving;
		double bedrag;
		double remgeld;
		string? verstrekker;
		int nomenclatuur;
		string? voorschrijver;

	}

	// EVENTS
	record AangifteGeregistreerd {
		Klant klant;
		@logicalType("timestamp-millis") long DatumVerzendingAO;
		@logicalType("timestamp-millis") long VermoedelijkeDatum;
		boolean verwittigen_Vzmy;
		array<GemaakteKost> gemaakteKosten;
	}

	record BeheerderToegevoegd {
		string Beheerder;
	}

	record ExtraInfoOverDerdeGegeven {
		string DossierNummer;
		Tegenpartij tegenpartij;
		string Polisnummer;
		MinnelijkeSchikking? minnelijkeSchikking;
		// is er een schadevergoeding gevorderd? ja/nee
		boolean SchadevergoedingGevorderd;
		// reeds schadeloosstelling verkregen? ja/nee
		boolean SchadeloostellingVerkregen;
		// reeds rechtsvordering ingesteld? ja/nee
		boolean RechtsvorderingIngesteld;
	}

	// info over het verkeersongeval
	record ExtraDetailsVerkeersOngevalAangegeven{

		Voertuig voertuig;

		boolean VoertuigBestuurdDoorSlachtoffer;
		// polisnummer
		string? Polisnummer;
		// Dossiernummer
		string? Dossiernummer;

		//  was Slachtoffer Inzittende in Eigen Wagen
		boolean? SlachtofferInzittendeInEigenWagen;
		// was Slachtoffer Inzittende in Andermans Wagen
		boolean? SlachtofferInzittendeInAndermansWagen;
		// was slachtoffer duozitter van motorfiets of bromfiets
		boolean? DuoZitter;
		// slachtoffer was een voetganger
		boolean? SlachtofferIsVoetganger;
		string? Naam_en_AdresBestuurderVoertuig;
		string? Naam_en_AdresEigenaarVoertuig;
		string? ExtraInzittenden;
	}

	record Afgesloten {
		@logicalType("timestamp-millis") long DatumAfsluiting;
		string RedenAfsluiting;
	}

	record Heropend{
		//Heropenen Event
		@logicalType("timestamp-millis") long AangifteHeropendate;
		string RedenHeropening;
	}

	record ExtraToelichtingGegeven{
		@logicalType("timestamp-millis") long toelichtingDatum;
		string Toelichting;
	}

	record ExtraInfoLetselGegeven{
		string? Letsel;
	}

	record CodeAardToevoegd{
		CodeAard codeAard;
	}

	record ToevoegdCodeOngeval{
		CodeOngeval codeOngeval;
	}

	record BestemmelingToegevoegd{
		Verzekekeringspartij? bestemmeling;
	}

	record OorsprongCodeToevoegd{
		CodeOorsprong codeOorsprong;
	}
	record TypeOngevalToevoegd{
		TypeOngeval typeOngeval;
	}

	// Verklaring van de klant op erewoord van de gerechtigde of zijn wettelijke vertegenwoordiger
	record VerklaringGetekend{
		// date waarop de verklaring is afgelegd
		@logicalType("timestamp-millis") long? datum;
		// naam van de persoon die de verklaring aflegt
		string naamVerklaarder;
	}

	record SoortOngevalAangegeven{
		// VDA = Vermoedelijke Duur van Arbeidsongeschiktheid
		string VDA;

		// werd het slachtoffer opgenomen in het ziekenhuis? ja/nee
		boolean ZiekenhuisOpname;
		// zo ja geef de naam van de instelling
		string? instelling = null;
		// zo ja geef de date van opname
		@logicalType("timestamp-millis") long? Opnamedate;

		// plaats van de feiten: gemeente en land, straar of plaats, inrichting.
		string GemeenteOfLand;
		string straatOfPlaats;
		// Werf of lokaal waar het ongeval plaatsvond
		string? Inrichting;

		// werd er een proces-verbaal opgesteld? ja/nee
		boolean Proces_Verbaal;
		// door welke Politiezone?
		string? ToelichtingPolitie;
		// nummmer van het proces-verbaal
		string? NummerPv;
		// date dat het proces-verbaal werd opgesteld
		@logicalType("timestamp-millis") long? datumPv;

		boolean klachtIngediend;

		string Omstandigheden;

		string Verantwoordelijke;

		string? GegevensSlachtoffer;
		string? GegevensVerzekering;

		boolean SlachtofferWerk;
	}

	record ExtraDetailsAndereSoortOngevalAangegeven{

		string? Naam_en_adresVereniging;
		string? Naam_en_adresVZMIJvereniging;
		string? Polisnummer;
		string? Dossiernummer;

		// werd het slachtoffer moedwillig geslagen of gestampt? ja/nee
		boolean Moedwillig;
		// als ja geef de naam en adres van de dader
		string? Derde;

	}

	//Arbeidongeval of ongeval op weg naar of van het werk
	record ExtraDetailsArbeidOngevalAangegeven{

		// TKGW = ter kennis gebracht van de werkgever? ja/nee
		boolean TKGW;
		string Naam_en_AdresWerkgever;
		string Naam_en_AdresVZMIJwerkgever;
		string PolisNummer;
		string DossierNummer;

		// heeft werkgeveer de vereiste aangifte van arbeidsongval overgemaajt aan zijn wetsverzekeraar? ja/nee
		boolean vereisteAangifte;
		// wordt het ongeval door de wetsverzekeraar erkend als arbeidsongeval of ongeval van/naar het werk? ja/nee
		boolean ArbeidsongevalOfNiet;
		// als niet erkend, welke reden?
		string? Uitleg;

		// rechtsvordering ingespannen tegen de werkgever of tegen de wetsverzekeraar? ja/nee
		boolean Rechtsvordering;
		// zo ja, bij welke rechtbank en met welk gevolg?
		string? WelkRechtbank;
		string? WelkGevolg;

		// gaat het eventueel om een wederinstorting na een vroeger ongeval? ja/nee
		boolean Wederinstorting;

		// welk tijdsvlak van arbeidsongeschiktheid is al erkend (begin en einddate)?
		@logicalType("timestamp-millis") long? beginAOdatum;
		@logicalType("timestamp-millis") long? eindeAOdatum;// welk tijdsvlak wordt betwist (begin- en eind-datum)?
		@logicalType("timestamp-millis") long? beginBetwistingdatum;
		@logicalType("timestamp-millis") long? eindeBetwistingdatum;
	}

	record Opgewardeerd{
		string initierende_beheerder;
	}


}